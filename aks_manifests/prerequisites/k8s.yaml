apiVersion: v1
kind: Namespace
metadata:
  name: fsdemo

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: fsdemo-system-highest-priority-linux
value: 10000000
globalDefault: true
description: "This priority class is used for highest priority fsdemo system services which are essential."

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: fsdemo-highest-priority-linux
value: 1000000
globalDefault: false
description: "This priority class should be used for highest priority fsdemo service pods (linux) only."

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: fsdemo-highest-priority-linux
  namespace: fsdemo
spec:
  hard:
    requests.cpu: "20"
    limits.memory: 70Gi
  scopeSelector:
    matchExpressions:
    - operator : In
      scopeName: PriorityClass
      values: ["fsdemo-highest-priority-linux"]

---
# HPA for fsdemo-linux
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fsdemo-linux-hpa
  namespace: fsdemo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fsdemo-linux
  maxReplicas: 10
  minReplicas: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 15
      policies:
      - type: Percent
        value: 60
        periodSeconds: 30
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: v1
kind: Secret
metadata:
  name: fsdemo-storage-secret
  namespace: fsdemo
type: Opaque
data:
  azurestorageaccountkey: base64encodedstoragekey
  azurestorageaccountname: base64encodedstoragename

---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: fsdemo-storage-pv
  namespace: fsdemo
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi # azurefile-csi-premium # Builtin storage class
  csi:
    driver: file.csi.azure.com
    volumeHandle: fsdemo-storage-pv  # make sure this volumeid is unique for every identical share in the cluster
    volumeAttributes:
      resourceGroup: ch-azfs-dev-euw-001-rg  # optional, only set this when storage account is not in the same resource group as node
      shareName: aksfileshare # refer iac\storage.tf
    nodeStageSecretRef:
      name: fsdemo-storage-secret
      namespace: fsdemo
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=0
    - gid=0
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fsdemo-storage-pvc
  namespace: fsdemo
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile-csi # azurefile-csi-premium # Builtin storage class
  volumeName: fsdemo-storage-pv
  resources:
    requests:
      storage: 200Gi